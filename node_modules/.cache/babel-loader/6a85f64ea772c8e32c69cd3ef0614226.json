{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\luanv\\\\xcel-wom-fe-c\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, useHistory, Switch } from 'react-router-dom';\nimport { Security, LoginCallback, SecureRoute } from '@okta/okta-react';\nimport 'antd/dist/antd.less';\nimport { NotFoundPage } from './components/pages/NotFound';\nimport { ExampleListPage } from './components/pages/ExampleList';\nimport { HomePage } from './components/pages/Home';\nimport { ProfileListPage } from './components/pages/ProfileList';\nimport { LoginPage } from './components/pages/Login';\nimport { config } from './utils/oktaConfig';\nimport { LoadingComponent } from './components/common';\nimport { LandingComponent } from './components/pages/Landing';\nReactDOM.render( /*#__PURE__*/React.createElement(Router, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }\n}))), document.getElementById('root'));\n\nfunction App() {\n  // The reason to declare App this way is so that we can use any helper functions we'd need for business logic, in our case auth.\n  // React Router has a nifty useHistory hook we can use at this level to ensure we have security around our routes.\n  const history = useHistory();\n\n  const authHandler = () => {\n    // We pass this to our <Security /> component that wraps our routes.\n    // It'll automatically check if userToken is available and push back to login if not :)\n    history.push('/login');\n  };\n\n  return /*#__PURE__*/React.createElement(Security, Object.assign({}, config, {\n    onAuthRequired: authHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    component: LandingComponent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/implicit/callback\",\n    component: LoginCallback,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SecureRoute, {\n    path: \"/\",\n    exact: true,\n    component: () => /*#__PURE__*/React.createElement(HomePage, {\n      LoadingComponent: LoadingComponent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 26\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SecureRoute, {\n    path: \"/example-list\",\n    component: ExampleListPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SecureRoute, {\n    path: \"/profile-list\",\n    component: ProfileListPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    component: NotFoundPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/luanv/xcel-wom-fe-c/src/index.js"],"names":["React","ReactDOM","BrowserRouter","Router","Route","useHistory","Switch","Security","LoginCallback","SecureRoute","NotFoundPage","ExampleListPage","HomePage","ProfileListPage","LoginPage","config","LoadingComponent","LandingComponent","render","document","getElementById","App","history","authHandler","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,KAFF,EAGEC,UAHF,EAIEC,MAJF,QAKO,kBALP;AAOA,SAASC,QAAT,EAAmBC,aAAnB,EAAkCC,WAAlC,QAAqD,kBAArD;AACA,OAAO,qBAAP;AAEA,SAASC,YAAT,QAA6B,6BAA7B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,SAAT,QAA0B,0BAA1B;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,gBAAT,QAAiC,4BAAjC;AAEAhB,QAAQ,CAACiB,MAAT,eACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF,EAMEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF;;AASA,SAASC,GAAT,GAAe;AACb;AACA;AACA,QAAMC,OAAO,GAAGjB,UAAU,EAA1B;;AAEA,QAAMkB,WAAW,GAAG,MAAM;AACxB;AACA;AACAD,IAAAA,OAAO,CAACE,IAAR,CAAa,QAAb;AACD,GAJD;;AAMA,sBAEE,oBAAC,QAAD,oBAAcT,MAAd;AAAsB,IAAA,cAAc,EAAEQ,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,SAAS,EAAEN,gBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,oBAAZ;AAAiC,IAAA,SAAS,EAAET,aAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAKE,oBAAC,WAAD;AACE,IAAA,IAAI,EAAC,GADP;AAEE,IAAA,KAAK,MAFP;AAGE,IAAA,SAAS,EAAE,mBAAM,oBAAC,QAAD;AAAU,MAAA,gBAAgB,EAAEQ,gBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAUE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,eAAlB;AAAkC,IAAA,SAAS,EAAEL,eAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,eAYE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,eAAlB;AAAkC,IAAA,SAAS,EAAEE,eAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,eAcE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEH,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CADA,CAFF;AAqBD","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  useHistory,\r\n  Switch,\r\n} from 'react-router-dom';\r\n\r\nimport { Security, LoginCallback, SecureRoute } from '@okta/okta-react';\r\nimport 'antd/dist/antd.less';\r\n\r\nimport { NotFoundPage } from './components/pages/NotFound';\r\nimport { ExampleListPage } from './components/pages/ExampleList';\r\nimport { HomePage } from './components/pages/Home';\r\nimport { ProfileListPage } from './components/pages/ProfileList';\r\nimport { LoginPage } from './components/pages/Login';\r\nimport { config } from './utils/oktaConfig';\r\nimport { LoadingComponent } from './components/common';\r\nimport { LandingComponent } from './components/pages/Landing'\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\nfunction App() {\r\n  // The reason to declare App this way is so that we can use any helper functions we'd need for business logic, in our case auth.\r\n  // React Router has a nifty useHistory hook we can use at this level to ensure we have security around our routes.\r\n  const history = useHistory();\r\n\r\n  const authHandler = () => {\r\n    // We pass this to our <Security /> component that wraps our routes.\r\n    // It'll automatically check if userToken is available and push back to login if not :)\r\n    history.push('/login');\r\n  };\r\n\r\n  return (\r\n    \r\n    <Security {...config} onAuthRequired={authHandler}>\r\n    <Switch>\r\n      <Route path=\"/\" component={LandingComponent}/>\r\n      {/* <Route path=\"/login\" component={LoginPage} /> */}\r\n      <Route path=\"/implicit/callback\" component={LoginCallback} />\r\n      {/* any of the routes you need secured should be registered as SecureRoutes */}\r\n      <SecureRoute\r\n        path=\"/\"\r\n        exact\r\n        component={() => <HomePage LoadingComponent={LoadingComponent} />}\r\n      />\r\n      <SecureRoute path=\"/example-list\" component={ExampleListPage} />\r\n      \r\n      <SecureRoute path=\"/profile-list\" component={ProfileListPage} />\r\n      \r\n      <Route component={NotFoundPage} />\r\n    </Switch>\r\n    </Security>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}